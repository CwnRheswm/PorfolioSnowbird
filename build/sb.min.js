var $ = function(a) {
    return document.querySelectorAll(a);
};

$(function() {
    var a, b, c, d, e = $(".weatherWidgetBtn")[0], f = $(".navWidgetBtn")[0], g = ($("#headerBar")[0], 
    $("#header")[0], $(".drawer")[0]), h = ($(".cubeContent")[0], $(".navIcon")[0]), i = $(".rightCol ul")[0], j = 2e3, k = "localhost" === window.location.hostname, l = new Date(), m = 432e5;
    onPageLoad = function() {
        d = weather.getWeather();
        for (var a = 0; 5 > a; a++) {
            var b, c, e, f, g, h, j, k, l = {};
            l = d[a], 0 === a && (h = $(".currentTemp .icon")[0], j = $(".weatherWidgetBtn .icon")[0], 
            k = $(".currentTemp .temp")[0], h.className = h.className += l.icon, k.innerHTML = l.temp + "&deg", 
            j.className = l.icon + " icon black"), b = document.createElement("h5"), b.appendChild(document.createTextNode(l.day)), 
            b.className = "day", c = document.createElement("span"), c.className = l.icon += " icon blue", 
            e = document.createElement("span"), e.innerHTML = l.high + "&deg", e.className = "high", 
            f = document.createElement("span"), f.innerHTML = l.low + "&deg", f.className = "low", 
            g = document.createElement("li"), g.appendChild(b), g.appendChild(c), g.appendChild(e), 
            g.appendChild(f), i.appendChild(g);
        }
    }, weather = function() {
        return _buildWeatherJSONfromOWMJSON = function(a, b) {
            for (var c, d = [ "sun", "mon", "tue", "wed", "thu", "fri", "sat" ], e = l.getDay(), f = {}, g = 0; g < Object.keys(a.forecast).length; g++) c = g + e, 
            c > 6 && (c -= 7), f[g] = {
                day: d[c],
                icon: _parseOWMIconCode(a.forecast[g].weather[0].icon),
                high: Math.round(a.forecast[g].main.temp_max),
                low: Math.round(a.forecast[g].main.temp_min),
                temp: Math.round(a.forecast[g].main.temp)
            };
            f.dateSet = new Date(), console.log(f.dateSet.toJSON()), b(f);
        }, _getWeatherFromOWM = function(a) {
            if (k) {
                var b = {
                    coord: {
                        lon: -.13,
                        lat: 51.51
                    },
                    forecast: {
                        "0": {
                            weather: [ {
                                id: 800,
                                main: "Clear",
                                description: "sky is clear",
                                icon: "10n"
                            } ],
                            main: {
                                temp: 12.73,
                                pressure: 814.36,
                                humidity: 61,
                                temp_min: 0,
                                temp_max: 15.22
                            },
                            wind: {
                                speed: 10.3,
                                deg: 290,
                                gust: 15.4
                            }
                        },
                        "1": {
                            weather: [ {
                                id: 500,
                                main: "Rain",
                                description: "light rain",
                                icon: "10n"
                            } ],
                            main: {
                                temp: 12.73,
                                pressure: 814.36,
                                humidity: 61,
                                temp_min: 1,
                                temp_max: 11.46
                            },
                            wind: {
                                speed: 10.3,
                                deg: 290,
                                gust: 15.4
                            }
                        },
                        "2": {
                            weather: [ {
                                id: 800,
                                main: "Clear",
                                description: "sky is clear",
                                icon: "01n"
                            } ],
                            main: {
                                temp: 12.73,
                                pressure: 814.36,
                                humidity: 61,
                                temp_min: 4.11,
                                temp_max: 14.78
                            },
                            wind: {
                                speed: 10.3,
                                deg: 290,
                                gust: 15.4
                            }
                        },
                        "3": {
                            weather: [ {
                                id: 500,
                                main: "Rain",
                                description: "light rain",
                                icon: "10n"
                            } ],
                            main: {
                                temp: 14.64,
                                pressure: 814.36,
                                humidity: 61,
                                temp_min: 4.11,
                                temp_max: 14.64
                            },
                            wind: {
                                speed: 10.3,
                                deg: 290,
                                gust: 15.4
                            }
                        },
                        "4": {
                            weather: [ {
                                id: 802,
                                main: "Rain",
                                description: "light rain",
                                icon: "10n"
                            } ],
                            main: {
                                temp: 9,
                                pressure: 814.36,
                                humidity: 61,
                                temp_min: 2,
                                temp_max: 9
                            },
                            wind: {
                                speed: 10.3,
                                deg: 290,
                                gust: 15.4
                            }
                        }
                    },
                    name: "London",
                    dateSet: new Date()
                };
                _buildWeatherJSONfromOWMJSON(b, function(b) {
                    a(b);
                });
            } else {
                var c = {
                    forecast: ""
                }, d = arguments.units || "metric", e = arguments.city || "snowbird, UT", f = (arguments.forcastDays || "5", 
                "2a875b5c2a61bdb14dc7f2af6876cf7b"), g = "http://api.openweathermap.org/data/2.5/", h = "?q=" + e + "&cnt=" + forcastDays + "&mode=json&units=" + d + "&callback=?&APPID=" + f;
                callService = function(a, b) {
                    var c = "_" + l, d = document.createElement("script"), e = $("#head")[0] || document.documentElement;
                    window[c] = function(a) {
                        e.removeChild(d), b && b(a);
                    }, d.src = a.replace("callback=?", "callback=" + c), e.appendChild(d);
                }, callService(g + "forecast/daily" + h, function(b) {
                    c.forecast = b, _buildWeatherJSONfromOWMJSON(c, function(b) {
                        a(b);
                    });
                });
            }
        }, _parseOWMIconCode = function(a) {
            var b = "";
            switch (a.substr(0, 2)) {
              case "02":
              case "03":
                b += " partlyCloudy";
                break;

              case "04":
              case "50":
                b += " cloudy";
                break;

              case "09":
              case "10":
              case "11":
                b += " rain";
                break;

              case "13":
                b += " snow";
                break;

              default:
                b += " clear";
            }
            switch (a.substr(2, 1)) {
              case "n":
                b += " night";
            }
            return b;
        }, _retrieveWeatherFromStorage = function() {
            if (storedWeather = sessionStorage.weatherObject, void 0 !== storedWeather) {
                if (storedWeather = JSON.parse(storedWeather), !(new Date(storedWeather.dateSet).getTime() > l.getTime() + m)) return storedWeather;
                _getWeatherFromOWM(arguments, function(a) {
                    storedWeather = a, _storeWeatherInLocal(storedWeather);
                });
            } else _getWeatherFromOWM(function(a) {
                storedWeather = a, _storeWeatherInLocal(storedWeather);
            });
            return console.log(storedWeather), storedWeather;
        }, _storeWeatherInLocal = function(a) {
            sessionStorage.setItem("weatherObject", JSON.stringify(a));
        }, {
            getWeather: _retrieveWeatherFromStorage
        };
    }(), g = function() {
        var a = $(".drawer")[0], b = $(".cubeContent")[0], c = $("#headerBlock")[0], d = 10;
        return _open = function(e) {
            b.classList.add(e), b.classList.add("closed"), setTimeout(function() {
                b.classList.remove("closed"), b.classList.add("opened"), a.classList.add("opened"), 
                c.classList.add("opened");
            }, d);
        }, _close = function() {
            b.classList.remove("opened"), a.classList.remove("opened"), c.classList.remove("opened"), 
            setTimeout(function() {}, j);
        }, _setState = function(a, c) {
            return c === !0 ? b.classList.add(a) : c === !1 ? b.classList.remove(a) : void 0;
        }, _toggleState = function(a) {
            b.classList.toggle(a), 2 === arguments.length && b.classList.toggle(a, arguments[1]);
        }, _state = function(a) {
            return b.classList.contains(a);
        }, {
            open: _open,
            close: _close,
            setState: _setState,
            toggleState: _toggleState,
            state: _state
        };
    }(), e.addEventListener("click", function() {
        a = g.state("opened"), b = g.state("weather"), c = g.state("nav"), a ? c ? g.toggleState("nav") & h.classList.remove("active") & e.classList.add("active") & g.toggleState("weather") : g.close() & e.classList.toggle("active", !1) : g.open("weather") & g.toggleState("nav", !1) & e.classList.add("active") & console.log("Drawer is closed, open and set weather");
    }), f.addEventListener("click", function() {
        a = g.state("opened"), b = g.state("weather"), c = g.state("nav"), a ? b ? g.toggleState("weather") & e.classList.remove("active") & h.classList.add("active") & g.toggleState("nav") : g.close() & h.classList.toggle("active", !1) : g.open("nav") & g.toggleState("weather", !1) & h.classList.add("active");
    }), onPageLoad();
}());